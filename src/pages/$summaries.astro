---
import MainHead from '../components/MainHead.astro';
import SummaryNav from '../components/SummaryNav.astro';
import PostLink from '../components/PostLink.astro';
import Pagination from '../components/Pagination.astro';
import AnalyticsFooter from '../components/AnalyticsFooter.astro';

// page
let title = 'Overly Short Summaries';
let description = 'Summaries of books and blogs read by JBeshir. Topics likely to include rationality and technology.';
let canonicalURL = Astro.request.canonicalURL;

// collection
export let collection: any;
export async function createCollection() {
return {
/** Load posts, sort newest -> oldest */
async data() {
let allPosts = Astro.fetchContent('summaries/*.md');
allPosts.sort((a, b) => new Date(b.date) - new Date(a.date));
allPosts = allPosts.filter((post) => post.subpost !== "true");

return allPosts;
},
/** Set page size */
pageSize: 10,
/** Generate RSS feed (only for main /summaries/ feed) */
rss: {
title: 'Overly Short Summaries',
description: 'Summaries of books and blogs read by JBeshir. Topics likely to include rationality and technology.',
customData: `<language>en-gb</language>`,
item: (item) => ({
title: item.title,
description: item.description,
link: item.url,
pubDate: item.date,
}),
}
};
}
---

<html>
<head>
    <title>{title}</title>
    <MainHead
            title={title}
            description={description}
            image={collection.data[0].image}
            canonicalURL={canonicalURL}
            prev={collection.url.prev}
            next={collection.url.next}
    />

    <style lang="scss">
      .title {
        font-size: 3em;
        letter-spacing: -0.04em;
        margin-top: 2rem;
        margin-bottom: 0;
        text-align: center;
      }

      .count {
        font-size: 1em;
        display: block;
        text-align: center;
      }
    </style>
</head>

<body>
<SummaryNav />

<main class="wrapper">
    <h2 class="title">All Summaries</h2>
    <small class="count">{collection.start + 1}â€“{collection.end + 1} of {collection.total}</small>
    {collection.data.map((post) => <PostLink post={post} />)}
</main>

<footer>
    <Pagination prevUrl={collection.url.prev} nextUrl={collection.url.next} />
</footer>
</body>
<AnalyticsFooter />
</html>